"use strict";(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[811],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var n=t(7294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var a=n.createContext({}),i=function(e){var r=n.useContext(a),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},u=function(e){var r=i(e.components);return n.createElement(a.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,o=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=i(t),f=s,m=p["".concat(a,".").concat(f)]||p[f]||d[f]||o;return t?n.createElement(m,c(c({ref:r},u),{},{components:t})):n.createElement(m,c({ref:r},u))}));function f(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var o=t.length,c=new Array(o);c[0]=p;var l={};for(var a in r)hasOwnProperty.call(r,a)&&(l[a]=r[a]);l.originalType=e,l.mdxType="string"==typeof e?e:s,c[1]=l;for(var i=2;i<o;i++)c[i]=t[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9430:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var n=t(7462),s=(t(7294),t(3905));const o={},c="Prefer correct EdgeInsets constructor",l={unversionedId:"rules/flutter/prefer-correct-edge-insets-constructor",id:"rules/flutter/prefer-correct-edge-insets-constructor",title:"Prefer correct EdgeInsets constructor",description:"Has auto-fix",source:"@site/docs/rules/flutter/prefer-correct-edge-insets-constructor.md",sourceDirName:"rules/flutter",slug:"/rules/flutter/prefer-correct-edge-insets-constructor",permalink:"/docs/rules/flutter/prefer-correct-edge-insets-constructor",draft:!1,editUrl:"https://github.com/dart-code-checker/dart-code-metrics/tree/master/website/docs/rules/flutter/prefer-correct-edge-insets-constructor.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Prefer const border radius",permalink:"/docs/rules/flutter/prefer-const-border-radius"},next:{title:"Prefer extracting callbacks",permalink:"/docs/rules/flutter/prefer-extracting-callbacks"}},a={},i=[{value:"Rule id",id:"rule-id",level:2},{value:"Severity",id:"severity",level:2},{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:3}],u={toc:i};function d(e){let{components:r,...t}=e;return(0,s.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"prefer-correct-edgeinsets-constructor"},"Prefer correct EdgeInsets constructor"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/-has%20auto--fix-success",alt:"Has auto-fix"})),(0,s.kt)("h2",{id:"rule-id"},"Rule id"),(0,s.kt)("p",null,"prefer-correct-edge-insets-constructor"),(0,s.kt)("h2",{id:"severity"},"Severity"),(0,s.kt)("p",null,"Style"),(0,s.kt)("h2",{id:"description"},"Description"),(0,s.kt)("p",null,"If any value, passed to EdgeInsets.fromLTRB, equals 0, then EdgeInsets.fromLTRB should be replaced with EdgeInsets.only passing all non-zero values. If passed values are symmetric, then EdgeInsets.fromLTRB or EdgeInsets.only should be replaced with EdgeInsets.symmetric."),(0,s.kt)("h3",{id:"example"},"Example"),(0,s.kt)("p",null,"Bad:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-dart"},"EdgeInsets.fromLTRB(8, 0, 8, 0)\nEdgeInsets.fromLTRB (8, 0, 0, 0)\nEdgeInsets.only(left: 16, right: 16)\nEdgeInsets.fromLTRB(8, 8, 8, 8)\n")),(0,s.kt)("p",null,"Good:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-dart"},"EdgeInsets.symmetric(horizontal: 8)\nEdgeInsets.only(left: 8)\nEdgeInsets.symmetric(horizontal: 16)\nEdgeInsets.all(8)\n")))}d.isMDXComponent=!0}}]);