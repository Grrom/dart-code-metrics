"use strict";(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[1486],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var o=n.createContext({}),u=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(r),f=i,m=d["".concat(o,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var u=2;u<a;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5470:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return o},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),l=["components"],s={},o="Avoid shrink wrap in lists",u={unversionedId:"rules/flutter/avoid-shrink-wrap-in-lists",id:"rules/flutter/avoid-shrink-wrap-in-lists",title:"Avoid shrink wrap in lists",description:"Rule id",source:"@site/docs/rules/flutter/avoid-shrink-wrap-in-lists.md",sourceDirName:"rules/flutter",slug:"/rules/flutter/avoid-shrink-wrap-in-lists",permalink:"/docs/rules/flutter/avoid-shrink-wrap-in-lists",draft:!1,editUrl:"https://github.com/dart-code-checker/dart-code-metrics/tree/master/website/docs/rules/flutter/avoid-shrink-wrap-in-lists.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Avoid returning widgets",permalink:"/docs/rules/flutter/avoid-returning-widgets"},next:{title:"Avoid unnecessary setState",permalink:"/docs/rules/flutter/avoid-unnecessary-setstate"}},c={},p=[{value:"Rule id",id:"rule-id",level:2},{value:"Severity",id:"severity",level:2},{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:3}],d={toc:p};function f(e){var t=e.components,r=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"avoid-shrink-wrap-in-lists"},"Avoid shrink wrap in lists"),(0,a.kt)("h2",{id:"rule-id"},"Rule id"),(0,a.kt)("p",null,"avoid-shrink-wrap-in-lists"),(0,a.kt)("h2",{id:"severity"},"Severity"),(0,a.kt)("p",null,"Performance"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Warns when a ",(0,a.kt)("inlineCode",{parentName:"p"},"ListView")," widget with ",(0,a.kt)("inlineCode",{parentName:"p"},"shrinkWrap")," parameter is wrapped in a ",(0,a.kt)("inlineCode",{parentName:"p"},"Column"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Row")," or another ",(0,a.kt)("inlineCode",{parentName:"p"},"ListView")," widget."),(0,a.kt)("p",null,"According to the Flutter documentation, using ",(0,a.kt)("inlineCode",{parentName:"p"},"shrinkWrap")," in lists is expensive performance-wise and should be avoided, since using slivers is significantly cheaper and achieves the same or even better results."),(0,a.kt)("p",null,"Additional resources:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/dart-lang/linter/issues/3496"},"https://github.com/dart-lang/linter/issues/3496"))),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,"Bad:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"Column(\n  children: [\n    Expanded(\n      // LINT\n      child: ListView(\n        shrinkWrap: true,\n        physics: const NeverScrollableScrollPhysics(),\n        children: [],\n      ),\n    ),\n  ],\n),\n")),(0,a.kt)("p",null,"Good:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"CustomScrollView(\n  slivers: [\n    SliverList(\n      delegate: SliverChildBuilderDelegate(\n        (context, index) => Container(),\n        childCount: someObject.length,\n      ),\n    ),\n  ],\n),\n")))}f.isMDXComponent=!0}}]);