"use strict";(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[6425],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=o,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||a;return t?r.createElement(f,i(i({ref:n},d),{},{components:t})):r.createElement(f,i({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},138:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const a={},i="Avoid non null assertion",l={unversionedId:"rules/common/avoid-non-null-assertion",id:"rules/common/avoid-non-null-assertion",title:"Avoid non null assertion",description:"Rule id",source:"@site/docs/rules/common/avoid-non-null-assertion.md",sourceDirName:"rules/common",slug:"/rules/common/avoid-non-null-assertion",permalink:"/docs/rules/common/avoid-non-null-assertion",draft:!1,editUrl:"https://github.com/dart-code-checker/dart-code-metrics/tree/master/website/docs/rules/common/avoid-non-null-assertion.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Avoid non ascii symbols",permalink:"/docs/rules/common/avoid-non-ascii-symbols"},next:{title:"Avoid throw in catch block",permalink:"/docs/rules/common/avoid-throw-in-catch-block"}},s={},c=[{value:"Rule id",id:"rule-id",level:2},{value:"Severity",id:"severity",level:2},{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:3}],d={toc:c};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"avoid-non-null-assertion"},"Avoid non null assertion"),(0,o.kt)("h2",{id:"rule-id"},"Rule id"),(0,o.kt)("p",null,"avoid-non-null-assertion"),(0,o.kt)("h2",{id:"severity"},"Severity"),(0,o.kt)("p",null,"Warning"),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Warns when non null assertion operator (",(0,o.kt)("strong",{parentName:"p"},"!")," or \u201cbang\u201d operator) is used for a property access or method invocation. The operator check works at runtime and it may fail and throw a runtime exception."),(0,o.kt)("p",null,"The rule ignores the index ",(0,o.kt)("inlineCode",{parentName:"p"},"[]")," operator on the Map class because it's considered the idiomatic way to access a known-present element in a map with ",(0,o.kt)("inlineCode",{parentName:"p"},"[]!")," according to ",(0,o.kt)("a",{parentName:"p",href:"https://dart.dev/null-safety/understanding-null-safety#the-map-index-operator-is-nullable"},"the docs"),"."),(0,o.kt)("p",null,"Use this rule if you want to avoid possible unexpected runtime exceptions."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("p",null,"Bad:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class Test {\n  String? field;\n\n  Test? object;\n\n  void method() {\n    field!.contains('other'); // LINT\n\n    object!.field!.contains('other'); // LINT\n\n    final map = {'key': 'value'};\n    map['key']!.contains('other');\n\n    object!.method(); // LINT\n  }\n}\n")),(0,o.kt)("p",null,"Good:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class Test {\n  String? field;\n\n  Test? object;\n\n  void method() {\n    field?.contains('other');\n\n    object?.field?.contains('other');\n\n    final map = {'key': 'value'};\n    map['key']!.contains('other');\n\n    object?.method();\n  }\n}\n")))}u.isMDXComponent=!0}}]);