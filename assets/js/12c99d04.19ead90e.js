"use strict";(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[5486],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(r),f=l,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function f(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,i=new Array(a);i[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4682:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return d}});var n=r(7462),l=r(3366),a=(r(7294),r(3905)),i=["components"],o={},c="Prefer extracting callbacks",s={unversionedId:"rules/flutter/prefer-extracting-callbacks",id:"rules/flutter/prefer-extracting-callbacks",title:"Prefer extracting callbacks",description:"Configurable",source:"@site/docs/rules/flutter/prefer-extracting-callbacks.md",sourceDirName:"rules/flutter",slug:"/rules/flutter/prefer-extracting-callbacks",permalink:"/docs/rules/flutter/prefer-extracting-callbacks",draft:!1,editUrl:"https://github.com/dart-code-checker/dart-code-metrics/tree/master/website/docs/rules/flutter/prefer-extracting-callbacks.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Prefer const border radius",permalink:"/docs/rules/flutter/prefer-const-border-radius"},next:{title:"Prefer single widget per file",permalink:"/docs/rules/flutter/prefer-single-widget-per-file"}},u={},d=[{value:"Rule id",id:"rule-id",level:2},{value:"Severity",id:"severity",level:2},{value:"Description",id:"description",level:2},{value:"Config example",id:"config-example",level:3},{value:"Example",id:"example",level:3}],p={toc:d};function f(e){var t=e.components,r=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"prefer-extracting-callbacks"},"Prefer extracting callbacks"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/-configurable-informational",alt:"Configurable"})),(0,a.kt)("h2",{id:"rule-id"},"Rule id"),(0,a.kt)("p",null,"prefer-extracting-callbacks"),(0,a.kt)("h2",{id:"severity"},"Severity"),(0,a.kt)("p",null,"Style"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Warns about inline callbacks in a widget tree and suggests to extract them to widget methods in order to make a ",(0,a.kt)("inlineCode",{parentName:"p"},"build")," method more readable. In addition extracting can help test those methods separately as well."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"NOTE")," the rule will not trigger on: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"arrow functions like ",(0,a.kt)("inlineCode",{parentName:"li"},"onPressed: () => _handler(...)")," in order to cover cases when a callback needs a variable from the outside;"),(0,a.kt)("li",{parentName:"ul"},"empty blocks."),(0,a.kt)("li",{parentName:"ul"},"Flutter specific: arguments with functions returning ",(0,a.kt)("inlineCode",{parentName:"li"},"Widget")," type (or its subclass) and with first parameter of type ",(0,a.kt)("inlineCode",{parentName:"li"},"BuildContext"),'. "Builder" functions is a common pattern in Flutter, for example, ',(0,a.kt)("a",{parentName:"li",href:"https://api.flutter.dev/flutter/widgets/IndexedWidgetBuilder.html"},"IndexedWidgetBuilder typedef")," is used in ",(0,a.kt)("a",{parentName:"li",href:"https://api.flutter.dev/flutter/widgets/ListView/ListView.builder.html"},"ListView.builder"),".")),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"ignored-named-arguments")," configuration, if you want to ignore specific named parameters."),(0,a.kt)("h3",{id:"config-example"},"Config example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"dart_code_metrics:\n  ...\n  rules:\n    ...\n    - prefer-extracting-callbacks:\n        ignored-named-arguments:\n          - onPressed\n        allowed-line-count: 3\n")),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,"Bad:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"class MyWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      style: ...,\n      onPressed: () { // LINT\n        // Some \n        // Huge\n        // Callback\n      },\n      child: ...\n    );\n  }\n}\n")),(0,a.kt)("p",null,"Good:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"class MyWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      style: ...,\n      onPressed: () => handlePressed(context),\n      child: ...\n    );\n  }\n  \n  void handlePressed(BuildContext context) {\n    ...\n  }\n}\n\nclass MyWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      style: ...,\n      onPressed: handlePressed,\n      child: ...\n    );\n  }\n  \n  void handlePressed() {\n    ...\n  }\n}\n")))}f.isMDXComponent=!0}}]);