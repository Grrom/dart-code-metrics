"use strict";(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[8976],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return f}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=n.createContext({}),c=function(e){var r=n.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(d.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(t),f=o,m=p["".concat(d,".").concat(f)]||p[f]||s[f]||i;return t?n.createElement(m,l(l({ref:r},u),{},{components:t})):n.createElement(m,l({ref:r},u))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=p;var a={};for(var d in r)hasOwnProperty.call(r,d)&&(a[d]=r[d]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var c=2;c<i;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2870:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return s}});var n=t(7462),o=t(3366),i=(t(7294),t(3905)),l=["components"],a={},d="Avoid using Border.all constructor",c={unversionedId:"rules/flutter/avoid-border-all",id:"rules/flutter/avoid-border-all",title:"Avoid using Border.all constructor",description:"Has auto-fix",source:"@site/docs/rules/flutter/avoid-border-all.md",sourceDirName:"rules/flutter",slug:"/rules/flutter/avoid-border-all",permalink:"/docs/rules/flutter/avoid-border-all",draft:!1,editUrl:"https://github.com/dart-code-checker/dart-code-metrics/tree/master/website/docs/rules/flutter/avoid-border-all.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Always remove listener",permalink:"/docs/rules/flutter/always-remove-listener"},next:{title:"Avoid returning widgets",permalink:"/docs/rules/flutter/avoid-returning-widgets"}},u={},s=[{value:"Rule id",id:"rule-id",level:2},{value:"Severity",id:"severity",level:2},{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:3}],p={toc:s};function f(e){var r=e.components,t=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"avoid-using-borderall-constructor"},"Avoid using Border.all constructor"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/-has%20auto--fix-success",alt:"Has auto-fix"})),(0,i.kt)("h2",{id:"rule-id"},"Rule id"),(0,i.kt)("p",null,"avoid-border-all"),(0,i.kt)("h2",{id:"severity"},"Severity"),(0,i.kt)("p",null,"Performance"),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Border.all")," constructor calls ",(0,i.kt)("strong",{parentName:"p"},"const")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Border.fromBorderSide")," constructor under the hood. This rule allows to replace ",(0,i.kt)("inlineCode",{parentName:"p"},"Border.all")," with ",(0,i.kt)("strong",{parentName:"p"},"const")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Border.fromBorderSide"),"."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,"Bad:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass BorderWidget extends StatelessWidget {\n  final Widget child;\n\n  const RoundedWidget({\n    Key? key,\n    required this.child,\n  }) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      //LINT\n      border: Border.all(\n        color: const Color(0xFF000000),\n        width: 1.0,\n        style: BorderStyle.solid,\n      ),\n      child: child,\n    );\n  }\n}\n")),(0,i.kt)("p",null,"Good:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass BorderWidget extends StatelessWidget {\n  final Widget child;\n\n  const RoundedWidget({\n    Key? key,\n    required this.child,\n  }) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      border: const Border.fromBorderSide(BorderSide(\n        color: const Color(0xFF000000),\n        width: 1.0,\n        style: BorderStyle.solid,\n      )), \n      child: child,\n    );\n  }\n}\n")))}f.isMDXComponent=!0}}]);